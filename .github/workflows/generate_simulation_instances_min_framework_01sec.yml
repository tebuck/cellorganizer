name: Run generate_simulation_instances_min_framework_01sec on GitHub-Hosted Runner
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  #push:
  #  branches: ["master", "simulation-experiments-in-mcell-and-vcell"]
  #pull_request:
  #  branches: ["master", "simulation-experiments-in-mcell-and-vcell"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  my-job:
    name: Run MATLAB Script
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: |
            start_time = tic;
            start_cputime = cputime;
            disp( mfilename );
            % disp( ['The estimated running time is about ', num2str(n_images_to_synthesize * 24478.721/100/60, '%.1f'), ' minutes. Please wait.'] );
            % Modified from code produced by generate_and_simulate.py
            setup;
            options = struct();
            options.reaction_network_file = 'data/CBExMinScaled3_01sec/CBExMinScaled3_01sec.*.mdl';
            options.output_dir = '../generate_simulation_instances_min_framework_01sec.m.out';
            options.cellorganizer = '.';
            options.framework_model = 'cellorganizer-models/3D/spharm/lamp2.demo3D52.mat';
            options.vesicle_models = ['cellorganizer-models/3D/tfr.mat'];
            options.synthesis = 'framework';
            options.output_image = true;
            options.n_images_to_synthesize = 5;
            options.n_vesicles = [1, 13819];
            options.vesicle_volume_scale = 1;
            options.downsampling = 0.5;
            options.vcml_relative_downsampling = 0.5;
            options.base_seed = 735945;
            options.n_vesicles_seed_offset = 34188;
            options.translations = {'cell', 'CP'; 'nuc', 'NU'; 'nucleus', 'NU'; 'lamp2_mat_tfr_mat', 'EN'; 'CP_EC', 'PM'; 'CP_EN', 'EM'; 'CP_NU', 'NM'};
            options.simulation_end_time = 1.0;
            options.simulation_default_time_step = 1.0;
            options.simulation_max_time_step = 4;
            options.simulation_output_time_step = 100;
            options.simulation_absolute_tolerance = 1e-08;
            options.simulation_relative_tolerance = 1e-08;
            options.simulation_interaction_radius = 0.03;
            options.simulation_seed_offset = 500578;
            options.framework_min_clearance = 0.1;
            options.framework_clearance_n_max_filter_rounds = 0;
            options.intersecting_mesh_object_policy = 'ignore';
            options.output_vcml = false;
            options.output_mcell = true;
            generate_simulation_instances_generic(options);
            elapsed_time = toc(start_time);
            elapsed_cputime = cputime - start_cputime;
            fprintf('\n%s took %.3f s (%.3f s CPU time)\n\n', mfilename, elapsed_time, elapsed_cputime);
      - name: Save model
        uses: actions/upload-artifact@v3
        with:
          name: generate_simulation_instances_min_framework_01sec.m.out
          path: generate_simulation_instances_min_framework_01sec.m.out
          if-no-files-found: error
